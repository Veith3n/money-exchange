services:
  app:
    build: .
    ports:
      - '${APP_PORT}:${APP_PORT}'
    env_file:
      - ./.env
    environment:
      - NODE_ENV=production
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      web-migrations:
        condition: service_completed_successfully

  postgres:
    image: postgres:17.2
    env_file:
      - ./.env.postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # TODO: do not expose this in production
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    logging:
      driver: 'json-file'
    restart: unless-stopped

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 3

  web-migrations:
    build: .
    command: npm run migration:run
    env_file:
      - ./.env
    environment:
      - NODE_ENV=production
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
